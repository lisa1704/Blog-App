{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"G:\\\\3-2 2020\\\\Mobile & Web Dev\\\\MyBlogApp\\\\Blog Application\\\\Blog-App\\\\src\\\\screens\\\\HomeScreen.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { Card, Button, Text, Avatar, Input, Header } from \"react-native-elements\";\nimport PostCard from \"./../components/PostCard\";\nimport { AntDesign, Entypo } from \"@expo/vector-icons\";\nimport { AuthContext } from \"../providers/AuthProvider\";\nimport { getPosts } from \"./../requests/Posts\";\nimport { getUsers } from \"./../requests/Users\";\n\nvar HomeScreen = function HomeScreen(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      postBody = _useState2[0],\n      setpostBody = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      postList = _useState4[0],\n      setpostList = _useState4[1];\n\n  useEffect(function () {\n    var getData = function getData() {\n      return _regeneratorRuntime.async(function getData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.t0 = setpostList;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(getDataJSON('posts'));\n\n            case 3:\n              _context.t1 = _context.sent;\n              (0, _context.t0)(_context.t1);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    getData();\n  }, []);\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      posts = _useState6[0],\n      setPosts = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      users = _useState8[0],\n      setUsers = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      loading = _useState10[0],\n      setLoading = _useState10[1];\n\n  var loadPosts = function loadPosts() {\n    var response;\n    return _regeneratorRuntime.async(function loadPosts$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setLoading(true);\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(getPosts());\n\n          case 3:\n            response = _context2.sent;\n\n            if (response.ok) {\n              setPosts(response.data);\n            }\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var loadUsers = function loadUsers() {\n    var response;\n    return _regeneratorRuntime.async(function loadUsers$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(getUsers());\n\n          case 2:\n            response = _context3.sent;\n\n            if (response.ok) {\n              setUsers(response.data);\n            }\n\n            setLoading(false);\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getName = function getName(id) {\n    var Name = \"\";\n    users.forEach(function (element) {\n      if (element.id == id) Name = element.name;\n    });\n    return Name;\n  };\n\n  useEffect(function () {\n    loadPosts();\n    loadUsers();\n  }, []);\n  return React.createElement(AuthContext.Consumer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, function (auth) {\n    return React.createElement(View, {\n      style: styles.viewStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, React.createElement(Header, {\n      leftComponent: {\n        icon: \"menu\",\n        color: \"#fff\",\n        onPress: function onPress() {\n          props.navigation.toggleDrawer();\n        }\n      },\n      centerComponent: {\n        text: \"The Office\",\n        style: {\n          color: \"#fff\"\n        }\n      },\n      rightComponent: {\n        icon: \"lock-outline\",\n        color: \"#fff\",\n        onPress: function onPress() {\n          auth.setIsLoggedIn(false);\n          auth.setCurrentUser({});\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }\n    }), React.createElement(Card, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    }, React.createElement(Input, {\n      placeholder: \"What's On Your Mind?\",\n      leftIcon: React.createElement(Entypo, {\n        name: \"pencil\",\n        size: 24,\n        color: \"black\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 43\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 29\n      }\n    }), React.createElement(Button, {\n      title: \"Post\",\n      type: \"outline\",\n      onPress: function onPress() {},\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 29\n      }\n    })), React.createElement(FlatList, {\n      data: posts,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return React.createElement(PostCard, {\n          author: getName(item.userId),\n          title: item.title,\n          body: item.body,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 37\n          }\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }\n    }));\n  });\n};\n\nvar styles = StyleSheet.create({\n  textStyle: {\n    fontSize: 30,\n    color: \"blue\"\n  },\n  viewStyle: {\n    flex: 1\n  }\n});\nexport default HomeScreen;","map":{"version":3,"sources":["G:/3-2 2020/Mobile & Web Dev/MyBlogApp/Blog Application/Blog-App/src/screens/HomeScreen.js"],"names":["React","useState","useEffect","Card","Button","Text","Avatar","Input","Header","PostCard","AntDesign","Entypo","AuthContext","getPosts","getUsers","HomeScreen","props","postBody","setpostBody","postList","setpostList","getData","getDataJSON","posts","setPosts","users","setUsers","loading","setLoading","loadPosts","response","ok","data","loadUsers","getName","id","Name","forEach","element","name","auth","styles","viewStyle","icon","color","onPress","navigation","toggleDrawer","text","style","setIsLoggedIn","setCurrentUser","item","userId","title","body","StyleSheet","create","textStyle","fontSize","flex"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n    ScrollView,\n    View,\n    StyleSheet,\n    FlatList,\n    ActivityIndicator,\n} from \"react-native\";\nimport {\n    Card,\n    Button,\n    Text,\n    Avatar,\n    Input,\n    Header,\n} from \"react-native-elements\";\nimport PostCard from \"./../components/PostCard\";\nimport { AntDesign, Entypo } from \"@expo/vector-icons\";\nimport { AuthContext } from \"../providers/AuthProvider\";\nimport { getPosts } from \"./../requests/Posts\";\nimport { getUsers } from \"./../requests/Users\";\n\nconst HomeScreen = (props) => {\n    const [postBody, setpostBody] = useState(\"\");\n    const [postList, setpostList] = useState([]);\n    useEffect(() => {\n        const getData = async () => {\r\n            setpostList(await getDataJSON('posts'));\r\n        }\r\n        getData();\r\n    }\n        , []);\n\n    const [posts, setPosts] = useState([]);\n    const [users, setUsers] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    const loadPosts = async () => {\n        setLoading(true);\n        const response = await getPosts();\n        if (response.ok) {\n            setPosts(response.data);\n        }\n    };\n\n    const loadUsers = async () => {\n        const response = await getUsers();\n        if (response.ok) {\n            setUsers(response.data);\n        }\n        setLoading(false);\n    };\n    const getName = (id) => {\n        let Name = \"\";\n        users.forEach((element) => {\n            if (element.id == id) Name = element.name;\n        });\n        return Name;\n    };\n\n    useEffect(() => {\n        loadPosts();\n        loadUsers();\n    }, []);\n\n        return (\n            <AuthContext.Consumer>\n                {(auth) => (\n                    <View style={styles.viewStyle}>\n                        <Header\n                            leftComponent={{\n                                icon: \"menu\",\n                                color: \"#fff\",\n                                onPress: function () {\n                                    props.navigation.toggleDrawer();\n                                },\n                            }}\n                            centerComponent={{ text: \"The Office\", style: { color: \"#fff\" } }}\n                            rightComponent={{\n                                icon: \"lock-outline\",\n                                color: \"#fff\",\n                                onPress: function () {\n                                    auth.setIsLoggedIn(false);\n                                    auth.setCurrentUser({});\n                                },\n                            }}\n                        />\n                        <Card>\n                            <Input\n                                placeholder=\"What's On Your Mind?\"\n                                leftIcon={<Entypo name=\"pencil\" size={24} color=\"black\" />}\n                            />\n                            <Button title=\"Post\" type=\"outline\" onPress={function () {\n\n                            }} />\n                        </Card>\n\n                        <FlatList\n                            data={posts}\n                            renderItem={function ({ item }) {\n                                return (\n                                    <PostCard\n                                        author={getName(item.userId)}\n                                        title={item.title}\n                                        body={item.body}\n                                    />\n                                );\n                            }}\n                        />\n                    </View>\n                )}\n            </AuthContext.Consumer>\n        );\n};\n\nconst styles = StyleSheet.create({\n    textStyle: {\n        fontSize: 30,\n        color: \"blue\",\n    },\n    viewStyle: {\n        flex: 1,\n\n    },\n});\n\nexport default HomeScreen;\n"]},"metadata":{},"sourceType":"module"}