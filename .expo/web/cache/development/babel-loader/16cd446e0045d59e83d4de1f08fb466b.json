{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"G:\\\\3-2 2020\\\\Mobile & Web Dev\\\\MyBlogApp\\\\Blog Application\\\\Blog-App\\\\src\\\\screens\\\\HomeScreen.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Card, Button, Text, Avatar, Input, Header } from \"react-native-elements\";\nimport { AntDesign, Entypo } from \"@expo/vector-icons\";\nimport { AuthContext } from \"../providers/AuthProvider\";\nimport { storeDataJSON, getDataJSON, removeData } from \"../functions/AsyncStorageFunctions\";\nimport moment from \"moment\";\nimport PostCard from \"../components/PostCard\";\n\nvar HomeScreen = function HomeScreen(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      postText = _useState2[0],\n      setPostText = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      postList = _useState4[0],\n      setPostList = _useState4[1];\n\n  useEffect(function () {\n    var getData = function getData() {\n      return _regeneratorRuntime.async(function getData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.t0 = setPostList;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(getDataJSON('posts'));\n\n            case 3:\n              _context.t1 = _context.sent;\n              (0, _context.t0)(_context.t1);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    getData();\n  }, []);\n  return React.createElement(AuthContext.Consumer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, function (auth) {\n    return React.createElement(View, {\n      style: styles.viewStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, React.createElement(Header, {\n      backgroundColor: \"#29435c\",\n      leftComponent: {\n        icon: \"menu\",\n        color: \"#fff\",\n        onPress: function onPress() {\n          props.navigation.toggleDrawer();\n        }\n      },\n      centerComponent: {\n        text: \"The Office\",\n        style: {\n          color: \"#fff\"\n        }\n      },\n      rightComponent: {\n        icon: \"lock-outline\",\n        color: \"#fff\",\n        onPress: function onPress() {\n          auth.setIsLoggedIn(false);\n          auth.setCurrentUser({});\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }), React.createElement(Card, {\n      containerStyle: {\n        backgroundColor: '#d1d4c9'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, React.createElement(Input, {\n      placeholder: \"What's On Your Mind?\",\n      leftIcon: React.createElement(Entypo, {\n        name: \"pencil\",\n        size: 24,\n        color: \"#152a38\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }\n      }),\n      onChangeText: function onChangeText(currentInput) {\n        setPostText(currentInput);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }), React.createElement(Button, {\n      buttonStyle: {\n        borderColor: '#29435c'\n      },\n      title: \"Post\",\n      titleStyle: {\n        color: '#29435c'\n      },\n      type: \"outline\",\n      onPress: function _callee() {\n        var arr;\n        return _regeneratorRuntime.async(function _callee$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (postList != null) {\n                  setPostList(function (posts) {\n                    return [].concat(_toConsumableArray(posts), [{\n                      name: auth.CurrentUser.name,\n                      email: auth.CurrentUser.email,\n                      date: moment().format(\"DD MMM, YYYY\"),\n                      post: postText,\n                      key: postText\n                    }]);\n                  });\n                } else {\n                  arr = [];\n                  arr.push({\n                    name: auth.CurrentUser.name,\n                    email: auth.CurrentUser.email,\n                    date: moment().format(\"DD MMM, YYYY\"),\n                    post: postText,\n                    key: postText\n                  });\n                  setPostList(arr);\n                }\n\n                _context2.next = 3;\n                return _regeneratorRuntime.awrap(storeDataJSON('posts', postList));\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }), React.createElement(Button, {\n      buttonStyle: {\n        borderColor: '#29435c'\n      },\n      title: \"Delete Post\",\n      titleStyle: {\n        color: '#29435c'\n      },\n      type: \"outline\",\n      onPress: function _callee2() {\n        return _regeneratorRuntime.async(function _callee2$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return _regeneratorRuntime.awrap(removeData(\"Post\"));\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    })), React.createElement(FlatList, {\n      data: postList,\n      renderItem: function renderItem(postItem) {\n        return React.createElement(PostComponent, {\n          name: postItem.item.name,\n          date: postItem.item.date,\n          post: postItem.item.post,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }));\n  });\n};\n\nvar styles = StyleSheet.create({\n  textStyle: {\n    fontSize: 30,\n    color: \"blue\"\n  },\n  viewStyle: {\n    flex: 1,\n    backgroundColor: '#152a38'\n  }\n});\nexport default HomeScreen;","map":{"version":3,"sources":["G:/3-2 2020/Mobile & Web Dev/MyBlogApp/Blog Application/Blog-App/src/screens/HomeScreen.js"],"names":["React","useState","useEffect","Card","Button","Text","Avatar","Input","Header","AntDesign","Entypo","AuthContext","storeDataJSON","getDataJSON","removeData","moment","PostCard","HomeScreen","props","postText","setPostText","postList","setPostList","getData","auth","styles","viewStyle","icon","color","onPress","navigation","toggleDrawer","text","style","setIsLoggedIn","setCurrentUser","backgroundColor","currentInput","borderColor","posts","name","CurrentUser","email","date","format","post","key","arr","push","postItem","item","StyleSheet","create","textStyle","fontSize","flex"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { ScrollView, View, StyleSheet, FlatList } from \"react-native\";\nimport { Card, Button, Text, Avatar, Input, Header } from \"react-native-elements\";\nimport { AntDesign, Entypo } from \"@expo/vector-icons\";\nimport { AuthContext } from \"../providers/AuthProvider\";\nimport { storeDataJSON, getDataJSON, removeData } from \"../functions/AsyncStorageFunctions\";\nimport moment from \"moment\";\nimport PostCard from \"../components/PostCard\";\n\nconst HomeScreen = (props) => {\n  const [postText, setPostText] = useState(\"\");\n  const [postList, setPostList] = useState([]);\n\n  useEffect(() => {\n    const getData = async () => {\n      setPostList(await getDataJSON('posts'));\n    }\n    getData();\n  }, [])\n\n   //await removeData(\"posts\");\n\n  //getPosts();\n  return (\n    <AuthContext.Consumer>\n      {(auth) => (\n        <View style={styles.viewStyle}>\n          <Header\n            backgroundColor='#29435c'\n            leftComponent={{\n              icon: \"menu\",\n              color: \"#fff\",\n              onPress: function () {\n                props.navigation.toggleDrawer();\n              },\n            }}\n            centerComponent={{ text: \"The Office\", style: { color: \"#fff\" } }}\n            rightComponent={{\n              icon: \"lock-outline\",\n              color: \"#fff\",\n              onPress: function () {\n                auth.setIsLoggedIn(false);\n                auth.setCurrentUser({});\n              },\n            }}\n          />\n          <Card containerStyle={{ backgroundColor: '#d1d4c9' }}>\n            <Input\n              placeholder=\"What's On Your Mind?\"\n              leftIcon={<Entypo name=\"pencil\" size={24} color=\"#152a38\" />}\n              onChangeText={function (currentInput) {\n                setPostText(currentInput);\n              }}\n            />\n            <Button buttonStyle={{ borderColor: '#29435c' }}\n              title=\"Post\"\n              titleStyle={{ color: '#29435c' }}\n              type=\"outline\"\n              onPress={async () => {\n                if (postList != null) {\n                  setPostList(posts => [\n                    ...posts,\n                    {\n                      name: auth.CurrentUser.name,\n                      email: auth.CurrentUser.email,\n                      date: moment().format(\"DD MMM, YYYY\"),\n                      post: postText,\n                      key: postText,\n                    },\n                  ]);\n                }\n                else {\n                  const arr = [];\n                  arr.push({\n                    name: auth.CurrentUser.name,\n                    email: auth.CurrentUser.email,\n                    date: moment().format(\"DD MMM, YYYY\"),\n                    post: postText,\n                    key: postText,\n                  });\n                  setPostList(arr);\n                }\n                await storeDataJSON('posts', postList);\n                //alert(\"Post Successful!\");\n                //setPostText(\"\");\n\n              }} />\n            <Button buttonStyle={{ borderColor: '#29435c' }}\n              title=\"Delete Post\"\n              titleStyle={{ color: '#29435c' }}\n              type=\"outline\"\n              onPress = {async function(){\n                await removeData(\"Post\");\n              }}\n            />\n\n          </Card>\n          <FlatList\n              data={postList}\n              renderItem={postItem => (\n                <PostComponent\n                  name={postItem.item.name}\n                  date={postItem.item.date}\n                  post={postItem.item.post}\n\n                />\n\n              )}\n            />\n        </View>\n      )}\n    </AuthContext.Consumer>\n      );\n};\n\nconst styles = StyleSheet.create({\n        textStyle: {\n        fontSize: 30,\n    color: \"blue\",\n  },\n  viewStyle: {\n        flex: 1,\n    backgroundColor: '#152a38'\n  },\n});\n\nexport default HomeScreen;"]},"metadata":{},"sourceType":"module"}