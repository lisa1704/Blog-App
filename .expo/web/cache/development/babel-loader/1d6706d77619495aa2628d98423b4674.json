{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"G:\\\\3-2 2020\\\\Mobile & Web Dev\\\\MyBlogApp\\\\Blog Application\\\\Blog-App\\\\src\\\\screens\\\\NotificationScreen.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport { Text, Card, Button, Avatar, Header } from \"react-native-elements\";\nimport { AuthContext } from \"../providers/AuthProvider\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { NotificationCard } from \"../components/NotificationCard\";\nimport { getDataJSON } from \"../functions/AsyncStorageFunctions\";\n\nvar NotificationScreen = function NotificationScreen(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      notifArr = _useState2[0],\n      setnotifArr = _useState2[1];\n\n  var notify = email.concat(\"notify\");\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setemail = _useState4[1];\n\n  var getNotifications = function getNotifications() {\n    return _regeneratorRuntime.async(function getNotifications$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(getDataJSON(notify).then(function (data) {\n              if (data != null) {\n                setnotifArr(data);\n              } else setnotifArr([]);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getEmails = function getEmails() {\n    return _regeneratorRuntime.async(function getEmails$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(getDataJSON(mail).then(function (data) {\n              if (data != null) {\n                setemail(data);\n              } else setemail([]);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getNotifications();\n  }, [notifArr]);\n  useEffect(function () {\n    getEmails();\n  }, []);\n  return React.createElement(AuthContext.Consumer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, function (auth) {\n    return React.createElement(View, {\n      style: styles.viewStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, React.createElement(Header, {\n      leftComponent: {\n        icon: \"menu\",\n        color: \"#fff\",\n        onPress: function onPress() {\n          props.navigation.toggleDrawer();\n        }\n      },\n      centerComponent: {\n        text: \"The Office\",\n        style: {\n          color: \"#fff\"\n        }\n      },\n      rightComponent: {\n        icon: \"lock-outline\",\n        color: \"#fff\",\n        onPress: function onPress() {\n          auth.setIsLoggedIn(false);\n          auth.setCurrentUser({});\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }\n    }), React.createElement(Card, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, React.createElement(View, {\n      style: {\n        flexDirection: \"row\",\n        alignItems: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }\n    }, React.createElement(Avatar, {\n      containerStyle: {\n        backgroundColor: \"cyan\"\n      },\n      rounded: true,\n      icon: {\n        name: \"thumbs-o-up\",\n        type: \"font-awesome\",\n        color: \"black\"\n      },\n      activeOpacity: 1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 29\n      }\n    }), React.createElement(FlatList, {\n      data: notifArr,\n      renderItem: function renderItem(nItem) {\n        return React.createElement(View, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 41\n          }\n        }, React.createElement(NotificationCard, {\n          name: nItem.item.name,\n          email: nItem.item.email,\n          date: nItem.item.date,\n          post: nItem.item.post,\n          notification: nItem.item.notification,\n          type: nItem.item.type,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 45\n          }\n        }), React.createElement(Card.Divider, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 45\n          }\n        }));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 29\n      }\n    }))));\n  });\n};\n\nvar styles = StyleSheet.create({\n  textStyle: {\n    fontSize: 30,\n    color: \"blue\"\n  },\n  viewStyle: {\n    flex: 1\n  }\n});\nexport default NotificationScreen;","map":{"version":3,"sources":["G:/3-2 2020/Mobile & Web Dev/MyBlogApp/Blog Application/Blog-App/src/screens/NotificationScreen.js"],"names":["React","useState","useEffect","AsyncStorage","Text","Card","Button","Avatar","Header","AuthContext","NotificationCard","getDataJSON","NotificationScreen","props","notifArr","setnotifArr","notify","email","concat","setemail","getNotifications","then","data","getEmails","mail","auth","styles","viewStyle","icon","color","onPress","navigation","toggleDrawer","text","style","setIsLoggedIn","setCurrentUser","flexDirection","alignItems","backgroundColor","name","type","nItem","item","date","post","notification","StyleSheet","create","textStyle","fontSize","flex"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { View, StyleSheet, AsyncStorage } from \"react-native\";\nimport { Text, Card, Button, Avatar, Header } from \"react-native-elements\";\nimport { AuthContext } from \"../providers/AuthProvider\";\nimport { FlatList } from \"react-native\";\r\nimport { NotificationCard } from \"../components/NotificationCard\";\r\nimport { getDataJSON } from \"../functions/AsyncStorageFunctions\";\r\nconst NotificationScreen = (props) => {\n    const [notifArr, setnotifArr] = useState([]);\n    let notify = email.concat(\"notify\");\n    const [email, setemail] = useState(\"\");\n\n    const getNotifications = async () => {\n        await getDataJSON(notify).then((data) => {\r\n            if (data != null) {\r\n                setnotifArr(data);\r\n            } else\r\n                setnotifArr([]);\r\n        });\r\n    };\n    const getEmails = async () => {\n        await getDataJSON(mail).then((data) => {\r\n            if (data != null) {\r\n                setemail(data);\r\n            } else\r\n                setemail([]);\r\n        });\r\n    };\n    useEffect(() => {\n        getNotifications();\r\n    }, [notifArr])\n    useEffect(() => {\n        getEmails();\r\n    }, [])\n\n\n    return (\n        <AuthContext.Consumer>\n            {(auth) => (\n                <View style={styles.viewStyle}>\n                    <Header\n                        leftComponent={{\n                            icon: \"menu\",\n                            color: \"#fff\",\n                            onPress: function () {\n                                props.navigation.toggleDrawer();\n                            },\n                        }}\n                        centerComponent={{ text: \"The Office\", style: { color: \"#fff\" } }}\n                        rightComponent={{\n                            icon: \"lock-outline\",\n                            color: \"#fff\",\n                            onPress: function () {\n                                auth.setIsLoggedIn(false);\n                                auth.setCurrentUser({});\n                            },\n                        }}\n                    />\n                    <Card>\n                        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n                            <Avatar\n                                containerStyle={{ backgroundColor: \"cyan\" }}\n                                rounded\n                                icon={{\n                                    name: \"thumbs-o-up\",\n                                    type: \"font-awesome\",\n                                    color: \"black\",\n                                }}\n                                activeOpacity={1}\n                            />\n                            <FlatList\n                                data={notifArr}\n                                renderItem={\n                                    nItem => (\r\n                                        <View>\r\n                                            <NotificationCard\r\n                                                name={nItem.item.name}\r\n                                                email={nItem.item.email}\r\n                                                date={nItem.item.date}\r\n                                                post={nItem.item.post}\r\n                                                notification={nItem.item.notification}\r\n                                                type={nItem.item.type}\r\n                                            />\r\n                                            <Card.Divider/>\r\n                                        </View>\r\n                                )}\n                            />\n\n                        </View>\n                    </Card>\n                </View>\n            )}\n        </AuthContext.Consumer>\n    );\n};\n\nconst styles = StyleSheet.create({\n    textStyle: {\n        fontSize: 30,\n        color: \"blue\",\n    },\n    viewStyle: {\n        flex: 1,\n    },\n});\n\nexport default NotificationScreen;\n"]},"metadata":{},"sourceType":"module"}