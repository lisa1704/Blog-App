{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"G:\\\\3-2 2020\\\\Mobile & Web Dev\\\\MyBlogApp\\\\Blog Application\\\\Blog-App\\\\src\\\\screens\\\\HomeScreen.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Card, Button, Text, Avatar, Input, Header } from \"react-native-elements\";\nimport { AntDesign, Entypo } from \"@expo/vector-icons\";\nimport { AuthContext } from \"../providers/AuthProvider\";\nimport PostCard from \"../components/PostCard\";\nimport { storeDataJSON, getDataJSON, removeData } from \"../functions/AsyncStorageFunctions\";\nimport moment from \"moment\";\n\nvar HomeScreen = function HomeScreen(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      postBody = _useState2[0],\n      setpostBody = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      postArr = _useState4[0],\n      setpostArr = _useState4[1];\n\n  var getData = function getData() {\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(getDataJSON(\"posts\").then(function (data) {\n              if (data == null) {\n                setpostArr([]);\n              } else setpostArr(data);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var init = function init() {\n    return _regeneratorRuntime.async(function init$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(removeData(\"posts\"));\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getData();\n  }, []);\n  return React.createElement(AuthContext.Consumer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, function (auth) {\n    return React.createElement(View, {\n      style: styles.viewStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, React.createElement(Header, {\n      backgroundColor: \"blue\",\n      leftComponent: {\n        icon: \"menu\",\n        color: \"#fff\",\n        onPress: function onPress() {\n          props.navigation.toggleDrawer();\n        }\n      },\n      centerComponent: {\n        text: \"The Office\",\n        style: {\n          color: \"#fff\"\n        }\n      },\n      rightComponent: {\n        icon: \"lock-outline\",\n        color: \"#fff\",\n        onPress: function onPress() {\n          auth.setIsLoggedIn(false);\n          auth.setCurrentUser({});\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    }), React.createElement(Card, {\n      containerStyle: {\n        backgroundColor: \"#ffff\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, React.createElement(Input, {\n      placeholder: \"What's On Your Mind?\",\n      leftIcon: React.createElement(Entypo, {\n        name: \"pencil\",\n        size: 24,\n        color: \"#152a38\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 39\n        }\n      }),\n      onChangeText: function onChangeText(currentInput) {\n        setpostBody(currentInput);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }\n    }), React.createElement(Button, {\n      buttonStyle: {\n        borderColor: \"#29435c\"\n      },\n      title: \"Post\",\n      titleStyle: {\n        color: \"#29435c\"\n      },\n      type: \"outline\",\n      onPress: function _callee() {\n        var arr;\n        return _regeneratorRuntime.async(function _callee$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                arr = [].concat(_toConsumableArray(postArr), [{\n                  name: auth.CurrentUser.name,\n                  email: auth.CurrentUser.email,\n                  date: moment().format(\"DD MMM, YYYY\"),\n                  post: postBody,\n                  key: postBody\n                }]);\n                _context3.next = 3;\n                return _regeneratorRuntime.awrap(storeDataJSON(\"posts\", arr).then(function () {\n                  setpostArr(arr);\n                }));\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    }), React.createElement(Button, {\n      buttonStyle: {\n        borderColor: \"black\"\n      },\n      title: \"Delete Post\",\n      titleStyle: {\n        color: \"#29435c\"\n      },\n      type: \"outline\",\n      onPress: function _callee2() {\n        return _regeneratorRuntime.async(function _callee2$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return _regeneratorRuntime.awrap(removeData(\"Post\"));\n\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }\n    })), React.createElement(FlatList, {\n      data: postArr,\n      renderItem: function renderItem(pItem) {\n        return React.createElement(PostCard, {\n          name: pItem.item.name,\n          date: pItem.item.date,\n          post: pItem.item.post,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }));\n  });\n};\n\nvar styles = StyleSheet.create({\n  textStyle: {\n    fontSize: 30,\n    color: \"blue\"\n  },\n  viewStyle: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  }\n});\nexport default HomeScreen;","map":{"version":3,"sources":["G:/3-2 2020/Mobile & Web Dev/MyBlogApp/Blog Application/Blog-App/src/screens/HomeScreen.js"],"names":["React","useState","useEffect","Card","Button","Text","Avatar","Input","Header","AntDesign","Entypo","AuthContext","PostCard","storeDataJSON","getDataJSON","removeData","moment","HomeScreen","props","postBody","setpostBody","postArr","setpostArr","getData","then","data","init","auth","styles","viewStyle","icon","color","onPress","navigation","toggleDrawer","text","style","setIsLoggedIn","setCurrentUser","backgroundColor","currentInput","borderColor","arr","name","CurrentUser","email","date","format","post","key","pItem","item","StyleSheet","create","textStyle","fontSize","flex"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { ScrollView, View, StyleSheet, FlatList } from \"react-native\";\r\nimport {\r\n    Card,\r\n    Button,\r\n    Text,\r\n    Avatar,\r\n    Input,\r\n    Header,\r\n} from \"react-native-elements\";\r\nimport { AntDesign, Entypo } from \"@expo/vector-icons\";\r\nimport { AuthContext } from \"../providers/AuthProvider\";\r\nimport PostCard from \"../components/PostCard\";\r\nimport {\r\n    storeDataJSON,\r\n    getDataJSON,\r\n    removeData,\r\n} from \"../functions/AsyncStorageFunctions\";\r\nimport moment from \"moment\";\r\n\r\nconst HomeScreen = (props) => {\r\n    const [postBody, setpostBody] = useState(\"\");\r\n    const [postArr, setpostArr] = useState([]);\r\n    const getData = async () => {\r\n        await getDataJSON(\"posts\").then((data) => {\r\n            if (data == null) {\r\n                setpostArr([]);\r\n            } else setpostArr(data);\r\n        });\r\n    };\r\n\r\n    const init = async () => {\r\n        await removeData(\"posts\");\r\n    };\r\n    useEffect(() => {\r\n        getData();\r\n    }, []);\r\n    return (\r\n        <AuthContext.Consumer>\r\n            {(auth) => (\r\n                <View style={styles.viewStyle}>\r\n                    <Header\r\n                        backgroundColor=\"blue\"\r\n                        leftComponent={{\r\n                            icon: \"menu\",\r\n                            color: \"#fff\",\r\n                            onPress: function () {\r\n                                props.navigation.toggleDrawer();\r\n                            },\r\n                        }}\r\n                        centerComponent={{ text: \"The Office\", style: { color: \"#fff\" } }}\r\n                        rightComponent={{\r\n                            icon: \"lock-outline\",\r\n                            color: \"#fff\",\r\n                            onPress: function () {\r\n                                auth.setIsLoggedIn(false);\r\n                                auth.setCurrentUser({});\r\n                            },\r\n                        }}\r\n                    />\r\n                    <Card containerStyle={{ backgroundColor: \"#ffff\" }}>\r\n                        <Input\r\n                            placeholder=\"What's On Your Mind?\"\r\n                            leftIcon={<Entypo name=\"pencil\" size={24} color=\"#152a38\" />}\r\n                            onChangeText={function (currentInput) {\r\n                                setpostBody(currentInput);\r\n                            }}\r\n                        />\r\n                        <Button\r\n                            buttonStyle={{ borderColor: \"#29435c\" }}\r\n                            title=\"Post\"\r\n                            titleStyle={{ color: \"#29435c\" }}\r\n                            type=\"outline\"\r\n                            onPress={async () => {\r\n                                let arr = [\r\n                                    ...postArr,\r\n                                    {\r\n                                        name: auth.CurrentUser.name,\r\n                                        email: auth.CurrentUser.email,\r\n                                        date: moment().format(\"DD MMM, YYYY\"),\r\n                                        post: postBody,\r\n                                        key: postBody,\r\n                                    },\r\n                                ];\r\n\r\n                                await storeDataJSON(\"posts\", arr).then(() => {\r\n                                    setpostArr(arr);\r\n                                });\r\n\r\n                                //alert(\"Post Successful!\");\r\n                                //setPostText(\"\");\r\n                            }}\r\n                        />\r\n                        <Button\r\n                            buttonStyle={{ borderColor: \"black\" }}\r\n                            title=\"Delete Post\"\r\n                            titleStyle={{ color: \"#29435c\" }}\r\n                            type=\"outline\"\r\n                            onPress={async function () {\r\n                                await removeData(\"Post\");\r\n                            }}\r\n                        /> \r\n                    </Card>\r\n                    <FlatList\r\n                        data={postArr}\r\n                        renderItem={(pItem) => (\r\n                            <PostCard\r\n                                name={pItem.item.name}\r\n                                date={pItem.item.date}\r\n                                post={pItem.item.post}\r\n                            />\r\n                        )}\r\n                    />\r\n                </View>\r\n            )}\r\n        </AuthContext.Consumer>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    textStyle: {\r\n        fontSize: 30,\r\n        color: \"blue\",\r\n    },\r\n    viewStyle: {\r\n        flex: 1,\r\n        backgroundColor: \"#fff\",\r\n    },\r\n});\r\n\r\nexport default HomeScreen;\r\n"]},"metadata":{},"sourceType":"module"}