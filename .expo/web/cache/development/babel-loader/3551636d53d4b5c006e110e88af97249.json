{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\n\nvar storeData = function storeData(key, value) {\n  return _regeneratorRuntime.async(function storeData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem(key, value));\n\n        case 3:\n          alert(\"Data Stored Successfully!\");\n          _context.next = 9;\n          break;\n\n        case 6:\n          _context.prev = 6;\n          _context.t0 = _context[\"catch\"](0);\n          alert(_context.t0);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n};\n\nvar storeDataJSON = function storeDataJSON(key, value) {\n  var jsonValue;\n  return _regeneratorRuntime.async(function storeDataJSON$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          jsonValue = JSON.stringify(value);\n          _context2.next = 4;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem(key, jsonValue));\n\n        case 4:\n          alert(\"Data Stored Successfully!\");\n          _context2.next = 10;\n          break;\n\n        case 7:\n          _context2.prev = 7;\n          _context2.t0 = _context2[\"catch\"](0);\n          alert(_context2.t0);\n\n        case 10:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\n\nvar getData = function getData(key) {\n  var data;\n  return _regeneratorRuntime.async(function getData$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(key));\n\n        case 3:\n          data = _context3.sent;\n\n          if (!(data != null)) {\n            _context3.next = 8;\n            break;\n          }\n\n          return _context3.abrupt(\"return\", data);\n\n        case 8:\n          alert(\"No data with this key!\");\n\n        case 9:\n          _context3.next = 14;\n          break;\n\n        case 11:\n          _context3.prev = 11;\n          _context3.t0 = _context3[\"catch\"](0);\n          alert(_context3.t0);\n\n        case 14:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 11]], Promise);\n};\n\nvar getDataJSON = function getDataJSON(key) {\n  var data, jsonData;\n  return _regeneratorRuntime.async(function getDataJSON$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(key));\n\n        case 3:\n          data = _context4.sent;\n\n          if (!(data != null)) {\n            _context4.next = 9;\n            break;\n          }\n\n          jsonData = JSON.parse(data);\n          return _context4.abrupt(\"return\", jsonData);\n\n        case 9:\n          _context4.next = 14;\n          break;\n\n        case 11:\n          _context4.prev = 11;\n          _context4.t0 = _context4[\"catch\"](0);\n          alert(_context4.t0);\n\n        case 14:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[0, 11]], Promise);\n};\n\nvar removeData = function removeData(key) {\n  return _regeneratorRuntime.async(function removeData$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.removeItem(key));\n\n        case 3:\n          alert(\"Data Removed Successfully\");\n          _context5.next = 9;\n          break;\n\n        case 6:\n          _context5.prev = 6;\n          _context5.t0 = _context5[\"catch\"](0);\n          alert(_context5.t0);\n\n        case 9:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n};\n\nvar mergeData = function mergeData(key, value) {\n  return _regeneratorRuntime.async(function mergeData$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          _context6.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.mergeItem(key, value));\n\n        case 3:\n          return _context6.abrupt(\"return\", true);\n\n        case 6:\n          _context6.prev = 6;\n          _context6.t0 = _context6[\"catch\"](0);\n          console.log(_context6.t0);\n\n        case 9:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n};\n\nexport { storeData, storeDataJSON, getData, getDataJSON, removeData, mergeData };","map":{"version":3,"sources":["G:/3-2 2020/Mobile & Web Dev/MyBlogApp/Blog Application/Blog-App/src/functions/AsyncStorageFunctions.js"],"names":["AsyncStorage","storeData","key","value","setItem","alert","storeDataJSON","jsonValue","JSON","stringify","getData","getItem","data","getDataJSON","jsonData","parse","removeData","removeItem","mergeData","mergeItem","console","log"],"mappings":";SAASA,Y;;AAET,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAOC,GAAP,EAAYC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAERH,YAAY,CAACI,OAAb,CAAqBF,GAArB,EAA0BC,KAA1B,CAFQ;;AAAA;AAGdE,UAAAA,KAAK,CAAC,2BAAD,CAAL;AAHc;AAAA;;AAAA;AAAA;AAAA;AAKdA,UAAAA,KAAK,aAAL;;AALc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlB;;AASA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAOJ,GAAP,EAAYC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEZI,UAAAA,SAFY,GAEAC,IAAI,CAACC,SAAL,CAAeN,KAAf,CAFA;AAAA;AAAA,2CAGZH,YAAY,CAACI,OAAb,CAAqBF,GAArB,EAA0BK,SAA1B,CAHY;;AAAA;AAIlBF,UAAAA,KAAK,CAAC,2BAAD,CAAL;AAJkB;AAAA;;AAAA;AAAA;AAAA;AAMlBA,UAAAA,KAAK,cAAL;;AANkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB;;AAUA,IAAMK,OAAO,GAAG,SAAVA,OAAU,CAAOR,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEKF,YAAY,CAACW,OAAb,CAAqBT,GAArB,CAFL;;AAAA;AAERU,UAAAA,IAFQ;;AAAA,gBAGRA,IAAI,IAAI,IAHA;AAAA;AAAA;AAAA;;AAAA,4CAIHA,IAJG;;AAAA;AAMVP,UAAAA,KAAK,CAAC,wBAAD,CAAL;;AANU;AAAA;AAAA;;AAAA;AAAA;AAAA;AASZA,UAAAA,KAAK,cAAL;;AATY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB;;AAYA,IAAMQ,WAAW,GAAG,SAAdA,WAAc,CAAOX,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAECF,YAAY,CAACW,OAAb,CAAqBT,GAArB,CAFD;;AAAA;AAEZU,UAAAA,IAFY;;AAAA,gBAGZA,IAAI,IAAI,IAHI;AAAA;AAAA;AAAA;;AAIRE,UAAAA,QAJQ,GAIGN,IAAI,CAACO,KAAL,CAAWH,IAAX,CAJH;AAAA,4CAKPE,QALO;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAUhBT,UAAAA,KAAK,cAAL;;AAVgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB;;AAcA,IAAMW,UAAU,GAAG,SAAbA,UAAa,CAAOd,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAETF,YAAY,CAACiB,UAAb,CAAwBf,GAAxB,CAFS;;AAAA;AAGfG,UAAAA,KAAK,CAAC,2BAAD,CAAL;AAHe;AAAA;;AAAA;AAAA;AAAA;AAKfA,UAAAA,KAAK,cAAL;;AALe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB;;AASA,IAAMa,SAAS,GAAG,SAAZA,SAAY,CAAOhB,GAAP,EAAYC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEJH,YAAY,CAACmB,SAAb,CAAuBjB,GAAvB,EAA4BC,KAA5B,CAFI;;AAAA;AAAA,4CAGH,IAHG;;AAAA;AAAA;AAAA;AAMViB,UAAAA,OAAO,CAACC,GAAR;;AANU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlB;;AASA,SAASpB,SAAT,EAAoBK,aAApB,EAAmCI,OAAnC,EAA4CG,WAA5C,EAAyDG,UAAzD,EAAqEE,SAArE","sourcesContent":["import { AsyncStorage } from \"react-native\";\n\nconst storeData = async (key, value) => {\n  try {\n    await AsyncStorage.setItem(key, value);\n    alert(\"Data Stored Successfully!\");\n  } catch (error) {\n    alert(error);\n  }\n};\n\nconst storeDataJSON = async (key, value) => {\n  try {\n    const jsonValue = JSON.stringify(value);\n    await AsyncStorage.setItem(key, jsonValue);\n    alert(\"Data Stored Successfully!\");\n  } catch (error) {\n    alert(error);\n  }\n};\n\nconst getData = async (key) => {\n  try {\n    let data = await AsyncStorage.getItem(key);\n    if (data != null) {\n      return data;\n    } else {\n      alert(\"No data with this key!\");\n    }\n  } catch (error) {\n    alert(error);\n  }\n};\nconst getDataJSON = async (key) => {\n  try {\n    let data = await AsyncStorage.getItem(key);\n    if (data != null) {\n      const jsonData = JSON.parse(data);\n      return jsonData;\n    } else {\n      //alert(\"No data with this key!\");\n    }\n  } catch (error) {\n    alert(error);\n  }\n};\n\nconst removeData = async (key) => {\n  try {\n    await AsyncStorage.removeItem(key);\n    alert(\"Data Removed Successfully\");\n  } catch (error) {\n    alert(error);\n  }\n};\n\nconst mergeData = async (key, value) => {\n    try {\r\n        await AsyncStorage.mergeItem(key, value);\r\n        return true;\r\n    }\r\n    catch (error) {\r\n        console.log(error);\r\n    }\r\n};\nexport { storeData, storeDataJSON, getData, getDataJSON, removeData, mergeData };\n"]},"metadata":{},"sourceType":"module"}