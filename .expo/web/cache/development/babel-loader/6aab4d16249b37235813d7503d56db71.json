{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"G:\\\\3-2 2020\\\\Mobile & Web Dev\\\\MyBlogApp\\\\Blog Application\\\\Blog-App\\\\src\\\\screens\\\\SignInScreen.js\";\n\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport LayoutAnimation from \"react-native-web/dist/exports/LayoutAnimation\";\nimport { Input, Button, Card } from \"react-native-elements\";\nimport { FontAwesome, Feather, AntDesign } from \"@expo/vector-icons\";\nimport { AuthContext } from \"../providers/AuthProvider\";\nimport { getDataJSON } from \"../functions/AsyncStorageFunctions\";\nimport { color } from \"react-native-reanimated\";\n\nvar SignInScreen = function SignInScreen(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      Email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      Password = _useState4[0],\n      setPassword = _useState4[1];\n\n  return React.createElement(AuthContext.Consumer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, function (auth) {\n    return React.createElement(View, {\n      style: styles.viewStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }\n    }, React.createElement(Image, {\n      source: require(\"G:/3-2 2020/Mobile & Web Dev/MyBlogApp/Blog Application/Blog-App/assets/authBackground.jpg\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }\n    }), React.createElement(Card, {\n      style: styles.cardStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }\n    }, React.createElement(Card.Title, {\n      style: {\n        color: \"#E9446A\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 25\n      }\n    }, \"Welcome to Blog App!\"), React.createElement(Card.Divider, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 25\n      }\n    }), React.createElement(Input, {\n      leftIcon: React.createElement(FontAwesome, {\n        name: \"envelope\",\n        size: 24,\n        color: \"#E9446A\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 39\n        }\n      }),\n      placeholder: \"E-mail Address\",\n      onChangeText: function onChangeText(currentInput) {\n        setEmail(currentInput);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 25\n      }\n    }), React.createElement(Input, {\n      placeholder: \"Password\",\n      leftIcon: React.createElement(Feather, {\n        name: \"key\",\n        size: 24,\n        color: \"#E9446A\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 39\n        }\n      }),\n      secureTextEntry: true,\n      onChangeText: function onChangeText(currentInput) {\n        setPassword(currentInput);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }\n    }), React.createElement(Button, {\n      buttonStyle: {\n        backgroundColor: \"#E9446A\",\n        alignContent: \"center\",\n        alignItems: \"center\"\n      },\n      icon: React.createElement(AntDesign, {\n        name: \"login\",\n        size: 24,\n        color: \"#E9446A\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 35\n        }\n      }),\n      title: \"Sign In!\",\n      type: \"solid\",\n      onPress: function _callee() {\n        var UserData;\n        return _regeneratorRuntime.async(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _regeneratorRuntime.awrap(getDataJSON(Email));\n\n              case 2:\n                UserData = _context.sent;\n\n                if (UserData.password == Password) {\n                  auth.setIsLoggedIn(true);\n                  auth.setCurrentUser(UserData);\n                } else {\n                  alert(\"Login Failed\");\n                  console.log(UserData);\n                }\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }\n    }), React.createElement(Button, {\n      type: \"clear\",\n      icon: React.createElement(AntDesign, {\n        name: \"user\",\n        size: 24,\n        color: \"#E9446A\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 35\n        }\n      }),\n      title: \"  Don't have an account?\",\n      titleStyle: {\n        color: \"#E9446A\"\n      },\n      onPress: function onPress() {\n        props.navigation.navigate(\"SignUp\");\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    })));\n  });\n};\n\nvar styles = StyleSheet.create({\n  viewStyle: {\n    flex: 1,\n    justifyContent: \"center\",\n    backgroundColor: \"#E9446A\"\n  },\n  cardStyle: {}\n});\nexport default SignInScreen;","map":{"version":3,"sources":["G:/3-2 2020/Mobile & Web Dev/MyBlogApp/Blog Application/Blog-App/src/screens/SignInScreen.js"],"names":["React","useState","Input","Button","Card","FontAwesome","Feather","AntDesign","AuthContext","getDataJSON","color","SignInScreen","props","Email","setEmail","Password","setPassword","auth","styles","viewStyle","require","cardStyle","currentInput","backgroundColor","alignContent","alignItems","UserData","password","setIsLoggedIn","setCurrentUser","alert","console","log","navigation","navigate","StyleSheet","create","flex","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { View, StyleSheet, Image, StatusBar, LayoutAnimation } from \"react-native\";\nimport { Input, Button, Card } from \"react-native-elements\";\nimport { FontAwesome, Feather, AntDesign } from \"@expo/vector-icons\";\nimport { AuthContext } from \"../providers/AuthProvider\";\nimport { getDataJSON } from \"../functions/AsyncStorageFunctions\";\nimport { color } from \"react-native-reanimated\";\r\n\nconst SignInScreen = (props) => {\n    const [Email, setEmail] = useState(\"\");\n    const [Password, setPassword] = useState(\"\");\n    return (\n        <AuthContext.Consumer>\n            {(auth) => (\n                <View style={styles.viewStyle}>\n                    <Image source={require(\"G:/3-2 2020/Mobile & Web Dev/MyBlogApp/Blog Application/Blog-App/assets/authBackground.jpg\")} />\n                    <Card style={styles.cardStyle}>\n                        <Card.Title style={{ color: \"#E9446A\" }}>Welcome to Blog App!</Card.Title>\n                        <Card.Divider />\n                        <Input\n                            leftIcon={<FontAwesome name=\"envelope\" size={24} color=\"#E9446A\" />}\n                            placeholder=\"E-mail Address\"\n                            onChangeText={function (currentInput) {\n                                setEmail(currentInput);\n                            }}\n                        />\n\n                        <Input\n                            placeholder=\"Password\"\n                            leftIcon={<Feather name=\"key\" size={24} color=\"#E9446A\" />}\n                            secureTextEntry={true}\n                            onChangeText={function (currentInput) {\n                                setPassword(currentInput);\n                            }}\n                        />\n\n\n                        <Button\n                            buttonStyle={{ backgroundColor: \"#E9446A\", alignContent: \"center\", alignItems: \"center\" }}\n                            icon={<AntDesign name=\"login\" size={24} color=\"#E9446A\" />}\n                            title=\"Sign In!\"\n                            type=\"solid\"\n                            onPress={async function () {\n                                let UserData = await getDataJSON(Email);\n                                if (UserData.password == Password) {\n                                    auth.setIsLoggedIn(true);\n                                    auth.setCurrentUser(UserData);\n                                } else {\n                                    alert(\"Login Failed\");\n                                    console.log(UserData);\n                                }\n                            }}\n                        />\n                        <Button\n\n                            type=\"clear\"\n                            icon={<AntDesign name=\"user\" size={24} color=\"#E9446A\" />}\n                            title=\"  Don't have an account?\"\n                            titleStyle={{ color: \"#E9446A\" }}\n                            onPress={function () {\n                                props.navigation.navigate(\"SignUp\");\n                            }}\n                        />\n                    </Card>\n                </View>\n            )}\n        </AuthContext.Consumer>\n    );\n};\n\nconst styles = StyleSheet.create({\n\n    viewStyle: {\n        flex: 1,\n        justifyContent: \"center\",\n        backgroundColor: \"#E9446A\",\n    },\n    cardStyle: {\n\r\n    }\n});\nexport default SignInScreen;\n"]},"metadata":{},"sourceType":"module"}