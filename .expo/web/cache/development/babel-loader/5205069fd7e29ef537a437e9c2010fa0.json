{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"G:\\\\3-2 2020\\\\Mobile & Web Dev\\\\MyBlogApp\\\\Blog Application\\\\Blog-App\\\\src\\\\screens\\\\HomeScreen.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { Card, Button, Text, Avatar, Input, Header } from \"react-native-elements\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport PostCard from \"./../components/PostCard\";\nimport { AntDesign, Entypo } from \"@expo/vector-icons\";\nimport { AuthContext } from \"../providers/AuthProvider\";\nimport { getPosts } from \"./../requests/Posts\";\nimport { getUsers } from \"./../requests/Users\";\nimport moment from \"moment\";\nimport { storeDataJSON, getDataJSON, removeData } from \"../functions/AsyncStorageFunctions\";\n\nvar HomeScreen = function HomeScreen(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      postBody = _useState2[0],\n      setpostBody = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      postList = _useState4[0],\n      setpostList = _useState4[1];\n\n  useEffect(function () {\n    var getData = function getData() {\n      return _regeneratorRuntime.async(function getData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.t0 = setpostList;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(getDataJSON('posts'));\n\n            case 3:\n              _context.t1 = _context.sent;\n              (0, _context.t0)(_context.t1);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    getData();\n  }, []);\n  return React.createElement(AuthContext.Consumer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, function (auth) {\n    return React.createElement(View, {\n      style: styles.viewStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }, React.createElement(Header, {\n      leftComponent: {\n        icon: \"menu\",\n        color: \"#fff\",\n        onPress: function onPress() {\n          props.navigation.toggleDrawer();\n        }\n      },\n      centerComponent: {\n        text: \"The Office\",\n        style: {\n          color: \"#fff\"\n        }\n      },\n      rightComponent: {\n        icon: \"lock-outline\",\n        color: \"#fff\",\n        onPress: function onPress() {\n          auth.setIsLoggedIn(false);\n          auth.setCurrentUser({});\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }\n    }), React.createElement(Card, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }\n    }, React.createElement(Input, {\n      placeholder: \"What's On Your Mind?\",\n      leftIcon: React.createElement(Entypo, {\n        name: \"pencil\",\n        size: 24,\n        color: \"black\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 43\n        }\n      }),\n      onChangeText: function onChangeText(currentText) {\n        setpostBody(currentText);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 29\n      }\n    }), React.createElement(Button, {\n      title: \"Post\",\n      type: \"outline\",\n      onPress: function _callee() {\n        var a;\n        return _regeneratorRuntime.async(function _callee$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (postList != null) {\n                  setpostList(function (posts) {\n                    return [].concat(_toConsumableArray(posts), [{\n                      name: auth.CurrentUser.name,\n                      email: auth.CurrentUser.email,\n                      date: moment().format(),\n                      post: postBody,\n                      key: postBody\n                    }]);\n                  });\n                } else {\n                  a = [];\n                  a.push({\n                    name: auth.CurrentUser.name,\n                    email: auth.CurrentUser.email,\n                    date: moment().format(),\n                    post: postBody,\n                    key: postBody\n                  });\n                  setpostList(a);\n                }\n\n                _context2.next = 3;\n                return _regeneratorRuntime.awrap(storeDataJSON('posts', postList));\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 29\n      }\n    })), React.createElement(FlatList, {\n      data: postList,\n      renderItem: function renderItem(_ref) {\n        var postItem = _ref.postItem;\n        React.createElement(PostCard, {\n          name: postItem.item.name,\n          date: postItem.item.date,\n          post: postItem.item.post,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 33\n          }\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }\n    }));\n  });\n};\n\nvar styles = StyleSheet.create({\n  textStyle: {\n    fontSize: 30,\n    color: \"blue\"\n  },\n  viewStyle: {\n    flex: 1\n  }\n});\nexport default HomeScreen;","map":{"version":3,"sources":["G:/3-2 2020/Mobile & Web Dev/MyBlogApp/Blog Application/Blog-App/src/screens/HomeScreen.js"],"names":["React","useState","useEffect","Card","Button","Text","Avatar","Input","Header","AsyncStorage","PostCard","AntDesign","Entypo","AuthContext","getPosts","getUsers","moment","storeDataJSON","getDataJSON","removeData","HomeScreen","props","postBody","setpostBody","postList","setpostList","getData","auth","styles","viewStyle","icon","color","onPress","navigation","toggleDrawer","text","style","setIsLoggedIn","setCurrentUser","currentText","posts","name","CurrentUser","email","date","format","post","key","a","push","postItem","item","StyleSheet","create","textStyle","fontSize","flex"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n    ScrollView,\n    View,\n    StyleSheet,\n    FlatList,\n    ActivityIndicator,\n} from \"react-native\";\nimport {\n    Card,\n    Button,\n    Text,\n    Avatar,\n    Input,\n    Header,\n} from \"react-native-elements\";\nimport { AsyncStorage } from \"react-native\";\nimport PostCard from \"./../components/PostCard\";\nimport { AntDesign, Entypo } from \"@expo/vector-icons\";\nimport { AuthContext } from \"../providers/AuthProvider\";\nimport { getPosts } from \"./../requests/Posts\";\nimport { getUsers } from \"./../requests/Users\";\nimport moment from \"moment\";\nimport { storeDataJSON, getDataJSON, removeData } from \"../functions/AsyncStorageFunctions\";\r\n\nconst HomeScreen = (props) => {\n    const [postBody, setpostBody] = useState(\"\");\n    const [postList, setpostList] = useState([]);\n\n    \n    \n    useEffect(() => {\n        const getData = async () => {\r\n            setpostList(await getDataJSON('posts'));\r\n        }\r\n        getData();\r\n      \r\n    }, []);\n\n        return (\n            <AuthContext.Consumer>\n                {(auth) => (\n                    <View style={styles.viewStyle}>\n                        <Header\n                            leftComponent={{\n                                icon: \"menu\",\n                                color: \"#fff\",\n                                onPress: function () {\n                                    props.navigation.toggleDrawer();\n                                },\n                            }}\n                            centerComponent={{ text: \"The Office\", style: { color: \"#fff\" } }}\n                            rightComponent={{\n                                icon: \"lock-outline\",\n                                color: \"#fff\",\n                                onPress: function () {\n                                    auth.setIsLoggedIn(false);\n                                    auth.setCurrentUser({});\n                                },\n                            }}\n                        />\n                        <Card>\n                            <Input\n                                placeholder=\"What's On Your Mind?\"\n                                leftIcon={<Entypo name=\"pencil\" size={24} color=\"black\" />}\n                                onChangeText={function (currentText) {\n                                    setpostBody(currentText);\r\n                                }}\n                            />\n                            <Button\n                                title=\"Post\"\n                                type=\"outline\"\n                                onPress={async () => {\n                                    if (postList != null) {\n                                        setpostList(posts => [\n                                            ...posts,\n                                            {\n                                                name: auth.CurrentUser.name,\r\n                                                email: auth.CurrentUser.email,\r\n                                                date: moment().format(),\r\n                                                post: postBody,\r\n                                                key: postBody\r\n                                            },\n\n                                        ]);\n                                    }\n                                    else {\n                                        const a = [];\r\n                                        a.push({\r\n                                            name: auth.CurrentUser.name,\r\n                                            email: auth.CurrentUser.email,\r\n                                            date: moment().format(),\r\n                                            post: postBody,\r\n                                            key: postBody\r\n                                        });\r\n                                        setpostList(a);\n                                    }\n                                    await storeDataJSON('posts', postList);\n                                }\n                                }\n                            />\n                            \n                        </Card>\n\n                        <FlatList\n                            data={postList}\n                            renderItem={function ({ postItem }) {\n\n                                <PostCard\n                                    name={postItem.item.name}\n                                    date={postItem.item.date}\n                                    post={postItem.item.post}\n                                />\n\n                            }}\n                        />\n                    </View>\n                )}\n            </AuthContext.Consumer>\n        );\r\n\n    \n};\n\nconst styles = StyleSheet.create({\n    textStyle: {\n        fontSize: 30,\n        color: \"blue\",\n    },\n    viewStyle: {\n        flex: 1,\n\n    },\n});\n\nexport default HomeScreen;\n"]},"metadata":{},"sourceType":"module"}